{"version":3,"file":"static/js/553.95e8d132.chunk.js","mappings":"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","sources":["components/comment/CommentIconBtn.js","components/comment/Comment.js","components/comment/CommentsLayout.js","components/comment/WriteComment.js","post/PostCreate.js"],"sourcesContent":["import React from \"react\";\nimport Dropdown from \"@mui/joy/Dropdown\";\nimport IconButton from \"@mui/joy/IconButton\";\nimport Menu from \"@mui/joy/Menu\";\nimport MenuButton from \"@mui/joy/MenuButton\";\nimport MenuItem from \"@mui/joy/MenuItem\";\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\"; // MUI emoji icon\n\nfunction CommentIconBtn({ handleAction }) {\n  const icons = [\"üëç\", \"üëé\", \"‚ù§Ô∏è\", \"üéâ\"];\n\n  return (\n    <Dropdown>\n      <MenuButton\n        slots={{ root: IconButton }}\n        slotProps={{\n          root: {\n            variant: \"soft\",\n            color: \"primary\",\n            size: \"sm\",\n            sx: {\n              borderRadius: \"50%\",\n              backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n              marginBottom: \"5px\",\n              \"&:hover\": {\n                backgroundColor: \"rgba(25, 118, 210, 0.1)\",\n              },\n            },\n          },\n        }}\n      >\n        <EmojiEmotionsIcon fontSize='small' />\n      </MenuButton>\n\n      <Menu\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          padding: \"5px\",\n          gap: \"4px\",\n        }}\n      >\n        {icons.map((icon, index) => (\n          <MenuItem\n            onClick={() => handleAction(icon)}\n            key={index}\n            sx={{\n              fontSize: \"13px\",\n              borderRadius: \"8px\",\n              padding: \"5px 10px\",\n              \"&:hover\": {\n                backgroundColor: \"rgba(25, 118, 210, 0.1)\",\n              },\n            }}\n          >\n            {icon}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Dropdown>\n  );\n}\n\nexport default CommentIconBtn;\n","import { useEffect, useState } from \"react\";\nimport CommentIconBtn from \"./CommentIconBtn\";\nimport api from \"../../api/axios\";\nimport { useMemo } from \"react\";\nimport useMediaQuery from \"../../hooks/useMediaQuery\";\n\nfunction Comment({\n  avatar,\n  username,\n  date,\n  body,\n  likes = 0,\n  dislikes = 0,\n  loves = 0,\n  celebrates = 0,\n  commentId,\n  postId,\n  auth_reacted,\n}) {\n  // State for current user action\n  const [action, setAction] = useState(null);\n  // State for counts\n  const [counts, setCounts] = useState({\n    like: likes,\n    dislike: dislikes,\n    love: loves,\n    celebrate: celebrates,\n  });\n\n  const isMobile = useMediaQuery(\"(max-width: 768px)\");\n\n  const interactionsMap = {\n    \"üëç\": \"like\",\n    \"üëé\": \"dislike\",\n    \"‚ù§Ô∏è\": \"love\",\n    \"üéâ\": \"celebrate\",\n  };\n\n  const reverseInteractionsMap = useMemo(\n    () => ({\n      like: \"üëç\",\n      dislike: \"üëé\",\n      love: \"‚ù§Ô∏è\",\n      celebrate: \"üéâ\",\n    }),\n    []\n  );\n\n  useEffect(() => {\n    setCounts({\n      like: likes,\n      dislike: dislikes,\n      love: loves,\n      celebrate: celebrates,\n    });\n\n    setAction(auth_reacted ? reverseInteractionsMap[auth_reacted] : null);\n  }, [\n    likes,\n    dislikes,\n    loves,\n    celebrates,\n    auth_reacted,\n    reverseInteractionsMap,\n  ]);\n\n  async function handleAction(newActionType) {\n    const prevAction = action;\n    const reactionType = interactionsMap[newActionType];\n\n    // If clicking the same action again ‚Üí this will delete reaction\n    const nextAction = prevAction === newActionType ? null : newActionType;\n    setAction(nextAction);\n\n    try {\n      await api.patch(`posts/${postId}/comments/${commentId}/reactions`, {\n        type: reactionType,\n      });\n\n      // Update counts optimistically\n      setCounts((prev) => {\n        const updated = { ...prev };\n\n        // Remove previous reaction\n        if (prevAction) {\n          const prevType = interactionsMap[prevAction];\n          updated[prevType] = Math.max(0, updated[prevType] - 1);\n        }\n\n        // Add new reaction (if not removing)\n        if (nextAction) {\n          updated[reactionType] = parseInt(updated[reactionType] || 0) + 1;\n        }\n\n        return updated;\n      });\n    } catch (error) {\n      // Rollback UI on error\n      setAction(prevAction);\n      console.error(\"Error handling reaction:\", error);\n    }\n  }\n\n  return (\n    <div className='flex gap-x-2 mb-4 justify-center'>\n      {isMobile ? null : (\n        <div className='w-10 h-10 rounded-full overflow-hidden flex-shrink-0'>\n          <img\n            src={avatar}\n            alt='avatar'\n            className='w-full h-full object-cover'\n          />\n        </div>\n      )}\n\n      <div className='min-h-[150px] w-[500px] rounded outline outline-1 outline-[#3d424e]'>\n        {/* Header */}\n        <div className='h-10 bg-[#151923] flex gap-x-2 items-center text-[13px] pl-[10px] border-b border-[#3d424e] border-1'>\n          <div>\n            <a href='google.com'>{username}</a>\n          </div>\n          <div className='text-[#9198a1]'> {date}</div>\n        </div>\n\n        <div className='flex flex-col justify-between p-[10px] gap-y-7 flex-1'>\n          {/* Body */}\n          <div className='text-[14px] whitespace-pre-wrap'>{body}</div>\n\n          {/* Interaction */}\n          <div>\n            <CommentIconBtn handleAction={handleAction} />\n            {/* Reactions */}\n            <div className='flex gap-x-2'>\n              {Object.entries(counts).map(([key, value]) => (\n                <div\n                  key={key}\n                  className={`flex items-center justify-evenly text-xs w-[50px] h-[25px] border border-[#3d424e] rounded-full ${\n                    action === reverseInteractionsMap[key]\n                      ? \"bg-[#3d424e] text-white\"\n                      : \"bg-[#151923] text-[#9198a1]\"\n                  }`}\n                >\n                  <div>{reverseInteractionsMap[key]}</div>\n                  <div>{value}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Comment;\n","import Comment from \"./Comment\";\nimport WriteComment from \"./WriteComment\";\n\nfunction CommentsLayout({ comments, addComment }) {\n  if (!comments) {\n    return <div className='text-center text-gray-500'>Loading comments...</div>;\n  }\n\n  if (!comments || comments.length === 0) {\n    return (\n      <div>\n        <h2 className='text-xl font-semibold mb-5 mt-[80px]'>Comments</h2>\n        {/* Write Comment Section */}\n        <WriteComment onAddComment={addComment} />\n        <div className='text-center text-gray-500'>\n          No comments yet. Be the first to comment!\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className='text-2xl font-semibold mb-5 mt-[80px]'>Comments</h2>\n\n      {/* Write Comment Section */}\n      <WriteComment onAddComment={addComment} />\n\n      {comments.map((c) => (\n        <Comment\n          key={`comment-${c.id}`}\n          commentId={c.id}\n          postId={c.post_id}\n          date={c.created_at}\n          body={c.body}\n          likes={c.likes ?? 0}\n          dislikes={c.dislikes ?? 0}\n          celebrates={c.celebrates ?? 0}\n          loves={c.loves ?? 0}\n          avatar={c.user?.avatar || \"/default-avatar.png\"}\n          username={c.user?.username || \"Anonymous\"}\n          auth_reacted={c.auth_reacted}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default CommentsLayout;\n","import React, { useState } from \"react\";\nimport avatar from \"../../images/signin.jpg\";\nimport { Textarea, Button } from \"@mui/joy\";\nimport useMediaQuery from \"../../hooks/useMediaQuery\";\n\nfunction WriteComment({ onAddComment }) {\n  const [text, setText] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const isMobile = useMediaQuery(\"(max-width: 768px)\");\n  async function handleSubmit() {\n    setIsSubmitting(true);\n    await onAddComment(text);\n    setText(\"\"); // Clear the textarea after submitting\n    setIsSubmitting(false);\n  }\n\n  return (\n    <div className='flex gap-x-2 mb-11'>\n      {isMobile ? null : (\n        <>\n          {/* Avatar */}\n          <div className='w-10 h-10 rounded-full overflow-hidden flex-shrink-0'>\n            <img\n              src={user?.avatar}\n              alt=''\n              className='w-full h-full object-cover'\n            />\n          </div>\n        </>\n      )}\n\n      {/* Textarea and Button */}\n      <div className='flex-1'>\n        <Textarea\n          sx={{\n            minHeight: \"200px\",\n            backgroundColor: \"unset\",\n            padding: \"15px\",\n            color: \"white\",\n          }}\n          placeholder='Write a Comment...'\n          variant='outlined'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <div className='flex justify-end mt-2'>\n          <Button\n            variant='solid'\n            color='success'\n            sx={{\n              px: 2,\n              fontWeight: 400,\n              textTransform: \"none\",\n              borderRadius: \"6px\",\n            }}\n            onClick={handleSubmit}\n          >\n            {isSubmitting ? \"Submitting...\" : \"Comment\"}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WriteComment;\n","import React, { useState } from \"react\";\nimport { TextareaAutosize } from \"@mui/material\";\nimport api from \"../api/axios\";\nimport AlertPopup from \"../components/popup/AlertPopup\";\nimport { usePosts } from \"../context/PostsContext\";\nimport { useNavigate } from \"react-router\";\nimport WriteComment from \"../components/comment/WriteComment\";\nimport Comment from \"../components/comment/Comment\";\nimport CommentsLayout from \"../components/comment/CommentsLayout\";\n\nfunction PostCreate() {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [is_open, setIs_open] = useState(false);\n  const [res, setRes] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const nav = useNavigate();\n  async function handlePostPublish() {\n    if (isLoading) return; // Prevent multiple submissions\n    \n    setIsLoading(true);\n    \n    try {\n      const formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"body\", body);\n      if (image) {\n        formData.append(\"image\", image);\n      }\n\n      let response = await api.post(\"posts\", formData);\n\n      if (response.error) {\n        setRes({ error: true, message: response.message });\n      } else {\n        setRes({ error: false, message: response.data.message });\n        nav(\"/posts/history\");\n      }\n      setIs_open(true);\n    } catch (error) {\n      setRes({ error: true, message: \"Failed to create post. Please try again.\" });\n      setIs_open(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div>\n      <AlertPopup is_open={is_open} setIs_open={setIs_open} status={res} />\n      <div className='container-c'>\n        <label className={`flex items-center justify-center w-60 h-14 cursor-pointer border-2 border-dashed border-gray-400 rounded-lg hover:border-blue-500 transition duration-300 ${\n          isLoading ? 'opacity-50 cursor-not-allowed' : ''\n        }`}>\n          <span className='text-white'>Upload Image</span>\n          <input\n            type='file'\n            className='hidden'\n            disabled={isLoading}\n            onChange={(e) => {\n              setImage(e.target.files[0]);\n              setPreview(URL.createObjectURL(e.target.files[0]));\n            }}\n          />\n        </label>\n        <button\n          onClick={handlePostPublish}\n          disabled={isLoading}\n          className={`bg-green flex items-center justify-center ml-auto mb-5 px-6 py-2 rounded transition duration-200 ${\n            isLoading \n              ? 'opacity-70 cursor-not-allowed' \n              : 'hover:bg-green-600'\n          }`}\n        >\n          {isLoading ? (\n            <>\n              <svg\n                className='animate-spin -ml-1 mr-3 h-5 w-5 text-white'\n                xmlns='http://www.w3.org/2000/svg'\n                fill='none'\n                viewBox='0 0 24 24'\n              >\n                <circle\n                  className='opacity-25'\n                  cx='12'\n                  cy='12'\n                  r='10'\n                  stroke='currentColor'\n                  strokeWidth='4'\n                ></circle>\n                <path\n                  className='opacity-75'\n                  fill='currentColor'\n                  d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'\n                ></path>\n              </svg>\n              Publishing...\n            </>\n          ) : (\n            'Publish'\n          )}\n        </button>\n        <div>\n          <TextareaAutosize\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder='Title'\n            disabled={isLoading}\n            className={`w-[600px] h-[100px] text-4xl mb-[30px] pb-[20px] ${\n              isLoading ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n          />\n        </div>\n        <div className='flex justify-center mb-8'>\n          {preview && (\n            <img\n              className={`h-[500px] w-[100%] rounded object-cover ${\n                isLoading ? 'opacity-70' : ''\n              }`}\n              src={preview}\n              alt='img'\n            />\n          )}\n        </div>\n\n        <div>\n          <TextareaAutosize\n            value={body}\n            onChange={(e) => setBody(e.target.value)}\n            placeholder='Tell Your Story'\n            disabled={isLoading}\n            className={`w-[600px] mb-80 text-2xl ${\n              isLoading ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PostCreate;\n"],"names":["_ref","handleAction","_jsxs","Dropdown","children","_jsx","MenuButton","slots","root","IconButton","slotProps","variant","color","size","sx","borderRadius","backgroundColor","marginBottom","EmojiEmotionsIcon","fontSize","Menu","display","flexDirection","padding","gap","map","icon","index","MenuItem","onClick","avatar","username","date","body","likes","dislikes","loves","celebrates","commentId","postId","auth_reacted","action","setAction","useState","counts","setCounts","like","dislike","love","celebrate","isMobile","useMediaQuery","interactionsMap","reverseInteractionsMap","useMemo","useEffect","className","src","alt","href","CommentIconBtn","async","newActionType","prevAction","reactionType","nextAction","api","patch","concat","type","prev","updated","_objectSpread","prevType","Math","max","parseInt","error","console","Object","entries","_ref2","key","value","comments","addComment","length","WriteComment","onAddComment","c","_c$likes","_c$dislikes","_c$celebrates","_c$loves","_c$user","_c$user2","Comment","id","post_id","created_at","user","text","setText","isSubmitting","setIsSubmitting","JSON","parse","localStorage","getItem","_Fragment","Textarea","minHeight","placeholder","onChange","e","target","Button","px","fontWeight","textTransform","title","setTitle","setBody","image","setImage","is_open","setIs_open","res","setRes","preview","setPreview","isLoading","setIsLoading","nav","useNavigate","AlertPopup","status","disabled","files","URL","createObjectURL","formData","FormData","append","response","post","message","data","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","TextareaAutosize"],"sourceRoot":""}