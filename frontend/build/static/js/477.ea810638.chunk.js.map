{"version":3,"file":"static/js/477.ea810638.chunk.js","mappings":"oMAsFA,QA/EA,WACE,MAAOA,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,KAC1BG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAChCO,EAAKC,IAAUR,EAAAA,EAAAA,UAAS,OACxBS,EAASC,IAAcV,EAAAA,EAAAA,UAAS,MACjCW,GAAMC,EAAAA,EAAAA,MAoBZ,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACX,QAASA,EAASC,WAAYA,EAAYW,OAAQV,KAC9DM,EAAAA,EAAAA,MAAA,OAAKK,UAAU,cAAaJ,SAAA,EAC1BD,EAAAA,EAAAA,MAAA,SAAOK,UAAU,4JAA2JJ,SAAA,EAC1KC,EAAAA,EAAAA,KAAA,QAAMG,UAAU,aAAYJ,SAAC,kBAC7BC,EAAAA,EAAAA,KAAA,SACEI,KAAK,OACLD,UAAU,SACVE,SAAWC,IACTjB,EAASiB,EAAEC,OAAOC,MAAM,IACxBb,EAAWc,IAAIC,gBAAgBJ,EAAEC,OAAOC,MAAM,IAAI,QAIxDR,EAAAA,EAAAA,KAAA,UACEW,QAnCRC,iBACE,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAAShC,GACzB8B,EAASE,OAAO,OAAQ7B,GACpBE,GACFyB,EAASE,OAAO,QAAS3B,GAG3B,IAAI4B,QAAiBC,EAAAA,EAAIC,KAAK,QAASL,GAEnCG,EAASG,MACX1B,EAAO,CAAE0B,OAAO,EAAMC,QAASJ,EAASI,WAExC3B,EAAO,CAAE0B,OAAO,EAAOC,QAASJ,EAASK,KAAKD,UAC9CxB,EAAI,mBAENL,GAAW,EACb,EAmBQY,UAAS,6BAA+BJ,SACzC,aAGDC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACsB,EAAAA,EAAgB,CACfC,MAAOxC,EACPsB,SAAWC,GAAMtB,EAASsB,EAAEC,OAAOgB,OACnCC,YAAY,QACZrB,UAAS,yDAGbH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BAA0BJ,SACtCL,IACCM,EAAAA,EAAAA,KAAA,OACEG,UAAU,0CACVsB,IAAK/B,EACLgC,IAAI,WAKV1B,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACsB,EAAAA,EAAgB,CACfC,MAAOrC,EACPmB,SAAWC,GAAMnB,EAAQmB,EAAEC,OAAOgB,OAClCC,YAAY,kBACZrB,UAAU,oCAMtB,C,6GCpFa,MAAAwB,EAAA,iDAMb,SAASC,EAAcL,GACrB,OAAOM,SAASN,EAAO,KAAO,CAChC,CACA,MAAMO,EACI,CAENC,WAAY,SAEZC,SAAU,WAEVC,SAAU,SACVC,OAAQ,EACRC,IAAK,EACLC,KAAM,EAENC,UAAW,iBAwBf,MA0LA,EA1LsCC,EAAAA,YAAiB,SAA0BC,EAAOC,GACtF,MAAM,SACJnC,EAAQ,QACRoC,EAAO,QACPC,EAAU,EAAC,MACXC,EAAK,MACLpB,GAEEgB,EADCK,GAAKC,EAAAA,EAAAA,GACNN,EAAKZ,IAEPmB,QAASC,GACPT,EAAAA,OAAsB,MAATf,GACXyB,EAAcV,EAAAA,OAAa,MAC3BW,GAAYC,EAAAA,EAAAA,GAAWV,EAAcQ,GACrCG,EAAYb,EAAAA,OAAa,MACzBc,EAAoBd,EAAAA,OAAa,MACjCe,EAA0Bf,EAAAA,aAAkB,KAChD,MAAMgB,EAAWN,EAAYF,QACvBS,EAAiBH,EAAkBN,QACzC,IAAKQ,IAAaC,EAChB,OAEF,MACMC,GADkBC,EAAAA,EAAAA,GAAYH,GACEI,iBAAiBJ,GAGvD,GAA4B,QAAxBE,EAAcG,MAChB,MAAO,CACLC,iBAAkB,EAClBC,aAAa,GAGjBN,EAAeZ,MAAMgB,MAAQH,EAAcG,MAC3CJ,EAAehC,MAAQ+B,EAAS/B,OAASgB,EAAMf,aAAe,IACvB,OAAnC+B,EAAehC,MAAMuC,OAAO,KAI9BP,EAAehC,OAAS,KAE1B,MAAMwC,EAAYP,EAAcO,UAC1BC,EAAUpC,EAAc4B,EAAcS,eAAiBrC,EAAc4B,EAAcU,YACnFC,EAASvC,EAAc4B,EAAcY,mBAAqBxC,EAAc4B,EAAca,gBAGtFC,EAAcf,EAAegB,aAGnChB,EAAehC,MAAQ,IACvB,MAAMiD,EAAkBjB,EAAegB,aAGvC,IAAIE,EAAcH,EACd5B,IACF+B,EAAcC,KAAKC,IAAIC,OAAOlC,GAAW8B,EAAiBC,IAExDhC,IACFgC,EAAcC,KAAKG,IAAID,OAAOnC,GAAW+B,EAAiBC,IAE5DA,EAAcC,KAAKC,IAAIF,EAAaD,GAKpC,MAAO,CACLZ,iBAHuBa,GAA6B,eAAdV,EAA6BC,EAAUG,EAAS,GAItFN,YAHkBa,KAAKI,IAAIL,EAAcH,IAAgB,EAI1D,GACA,CAAC7B,EAASC,EAASH,EAAMf,cACtBuD,EAAazC,EAAAA,aAAkB,KACnC,MAAMgB,EAAWN,EAAYF,QACvBkC,EAAiB3B,IACvB,IAAKC,IAAa0B,IA7FtB,SAAuBC,GAErB,IAAK,MAAMC,KAAKD,EACd,OAAO,EAET,OAAO,CACT,CAESE,CADQC,EAsF+BJ,IArFQ,IAAzBI,EAAIxB,mBAA2BwB,EAAIvB,aAsF5D,OAvFN,IAAiBuB,EAyFb,MAAMxB,EAAmBoB,EAAepB,iBACpCT,EAAUL,UAAYc,IACxBT,EAAUL,QAAUc,EACpBN,EAASX,MAAMT,OAAS,GAAHmD,OAAMzB,EAAgB,OAE7CN,EAASX,MAAMV,SAAW+C,EAAenB,YAAc,SAAW,EAAE,GACnE,CAACR,IACEiC,EAAWhD,EAAAA,QAAc,IAC/BiD,EAAAA,EAAAA,IAAkB,KAChB,MAAMC,EC/HK,SAAkBC,GAAkB,IAC7CC,EADiCC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAE5C,SAASG,IAAmB,QAAAC,EAAAJ,UAAAC,OAANI,EAAI,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAAP,UAAAO,GAKxBC,aAAaV,GACbA,EAAUW,YALIC,KAEZb,EAAKc,MAAMC,KAAMP,EAAK,GAGIN,EAC9B,CAIA,OAHAI,EAAUU,MAAQ,KAChBL,aAAaV,EAAQ,EAEhBK,CACT,CDiHiCW,EAAS,IAAM3B,MACtCzB,EAAsB,OAAXN,QAAW,IAAXA,OAAW,EAAXA,EAAaF,QAC9B,IAAKQ,EACH,OAEF,MAAMqD,GAAkBlD,EAAAA,EAAAA,GAAYH,GAEpC,IAAIsD,EAeJ,OAhBAD,EAAgBE,iBAAiB,SAAUrB,GAEb,qBAAnBsB,iBACTF,EAAiB,IAAIE,gBAAe,KAIlCF,EAAeG,UAAUzD,GACzB0D,qBAAqB1B,EAASxC,SAC9BiC,IACAO,EAASxC,QAAUmE,uBAAsB,KACvCL,EAAeM,QAAQ5D,EAAS,GAChC,IAEJsD,EAAeM,QAAQ5D,IAElB,KACLkC,EAAqBiB,QACrBO,qBAAqB1B,EAASxC,SAC9B6D,EAAgBQ,oBAAoB,SAAU3B,GAC1CoB,GACFA,EAAeQ,YACjB,CACD,GACA,CAAC/D,EAAyB0B,KAC7BQ,EAAAA,EAAAA,IAAkB,KAChBR,GAAY,IAUd,OAAoBjF,EAAAA,EAAAA,MAAMwC,EAAAA,SAAgB,CACxCvC,SAAU,EAAcC,EAAAA,EAAAA,KAAK,YAAUqH,EAAAA,EAAAA,GAAA,CACrC9F,MAAOA,EACPlB,SAXiBiH,IACdvE,GACHgC,IAEE1E,GACFA,EAASiH,EACX,EAMEC,IAAKtE,EAGLuE,KAAM9E,EACNC,MAAOA,GACJC,KACY5C,EAAAA,EAAAA,KAAK,WAAY,CAChC,eAAe,EACfG,UAAWoC,EAAMpC,UACjBsH,UAAU,EACVF,IAAKnE,EACLsE,UAAW,EACX/E,OAAK0E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAvF,GACAa,GAAK,IACRuB,WAAY,EACZD,cAAe,QAIvB,G,gDElMe,SAASR,EAAYkE,GAElC,OADYC,EAAAA,EAAAA,GAAcD,GACfE,aAAeC,MAC5B,C","sources":["post/PostCreate.js","../node_modules/@mui/material/TextareaAutosize/TextareaAutosize.js","../node_modules/@mui/utils/esm/debounce/debounce.js","../node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TextareaAutosize } from \"@mui/material\";\nimport api from \"../api/axios\";\nimport AlertPopup from \"../components/popup/AlertPopup\";\nimport { usePosts } from \"../context/PostsContext\";\nimport { useNavigate } from \"react-router\";\n\nfunction PostCreate() {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [is_open, setIs_open] = useState(false);\n  const [res, setRes] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const nav = useNavigate();\n  async function handlePostPublish() {\n    const formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"body\", body);\n    if (image) {\n      formData.append(\"image\", image);\n    }\n\n    let response = await api.post(\"posts\", formData);\n\n    if (response.error) {\n      setRes({ error: true, message: response.message });\n    } else {\n      setRes({ error: false, message: response.data.message });\n      nav(\"/posts/history\");\n    }\n    setIs_open(true);\n  }\n\n  return (\n    <div>\n      <AlertPopup is_open={is_open} setIs_open={setIs_open} status={res} />\n      <div className=\"container-c\">\n        <label className=\"flex items-center justify-center w-60 h-14 cursor-pointer border-2 border-dashed border-gray-400 rounded-lg hover:border-blue-500 transition duration-300\">\n          <span className=\"text-white\">Upload Image</span>\n          <input\n            type=\"file\"\n            className=\"hidden\"\n            onChange={(e) => {\n              setImage(e.target.files[0]);\n              setPreview(URL.createObjectURL(e.target.files[0]));\n            }}\n          />\n        </label>\n        <button\n          onClick={handlePostPublish}\n          className={`bg-green flex ml-auto mb-5`}\n        >\n          Publish\n        </button>\n        <div>\n          <TextareaAutosize\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"Title\"\n            className={`w-[600px] h-[100px] text-4xl mb-[30px] pb-[20px] `}\n          />\n        </div>\n        <div className=\"flex justify-center mb-8\">\n          {preview && (\n            <img\n              className=\"h-[500px] w-[100%] rounded object-cover\"\n              src={preview}\n              alt=\"img\"\n            />\n          )}\n        </div>\n\n        <div>\n          <TextareaAutosize\n            value={body}\n            onChange={(e) => setBody(e.target.value)}\n            placeholder=\"Tell Your Story\"\n            className=\"w-[600px] mb-80 text-2xl\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PostCreate;\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getStyleValue(value) {\n  return parseInt(value, 10) || 0;\n}\nconst styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nfunction isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n  return true;\n}\nfunction isEmpty(obj) {\n  return isObjectEmpty(obj) || obj.outerHeightStyle === 0 && !obj.overflowing;\n}\n\n/**\n *\n * Demos:\n *\n * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)\n *\n * API:\n *\n * - [TextareaAutosize API](https://mui.com/material-ui/api/textarea-autosize/)\n */\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, forwardedRef) {\n  const {\n    onChange,\n    maxRows,\n    minRows = 1,\n    style,\n    value,\n    ...other\n  } = props;\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const textareaRef = React.useRef(null);\n  const handleRef = useForkRef(forwardedRef, textareaRef);\n  const heightRef = React.useRef(null);\n  const hiddenTextareaRef = React.useRef(null);\n  const calculateTextareaStyles = React.useCallback(() => {\n    const textarea = textareaRef.current;\n    const hiddenTextarea = hiddenTextareaRef.current;\n    if (!textarea || !hiddenTextarea) {\n      return undefined;\n    }\n    const containerWindow = ownerWindow(textarea);\n    const computedStyle = containerWindow.getComputedStyle(textarea);\n\n    // If input's width is shrunk and it's not visible, don't sync height.\n    if (computedStyle.width === '0px') {\n      return {\n        outerHeightStyle: 0,\n        overflowing: false\n      };\n    }\n    hiddenTextarea.style.width = computedStyle.width;\n    hiddenTextarea.value = textarea.value || props.placeholder || 'x';\n    if (hiddenTextarea.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      hiddenTextarea.value += ' ';\n    }\n    const boxSizing = computedStyle.boxSizing;\n    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);\n    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth);\n\n    // The height of the inner content\n    const innerHeight = hiddenTextarea.scrollHeight;\n\n    // Measure height of a textarea with a single row\n    hiddenTextarea.value = 'x';\n    const singleRowHeight = hiddenTextarea.scrollHeight;\n\n    // The height of the outer content\n    let outerHeight = innerHeight;\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n    outerHeight = Math.max(outerHeight, singleRowHeight);\n\n    // Take the box sizing into account for applying this value as a style.\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflowing = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflowing\n    };\n  }, [maxRows, minRows, props.placeholder]);\n  const syncHeight = React.useCallback(() => {\n    const textarea = textareaRef.current;\n    const textareaStyles = calculateTextareaStyles();\n    if (!textarea || !textareaStyles || isEmpty(textareaStyles)) {\n      return;\n    }\n    const outerHeightStyle = textareaStyles.outerHeightStyle;\n    if (heightRef.current !== outerHeightStyle) {\n      heightRef.current = outerHeightStyle;\n      textarea.style.height = `${outerHeightStyle}px`;\n    }\n    textarea.style.overflow = textareaStyles.overflowing ? 'hidden' : '';\n  }, [calculateTextareaStyles]);\n  const frameRef = React.useRef(-1);\n  useEnhancedEffect(() => {\n    const debounceHandleResize = debounce(() => syncHeight());\n    const textarea = textareaRef?.current;\n    if (!textarea) {\n      return undefined;\n    }\n    const containerWindow = ownerWindow(textarea);\n    containerWindow.addEventListener('resize', debounceHandleResize);\n    let resizeObserver;\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(() => {\n        // avoid \"ResizeObserver loop completed with undelivered notifications\" error\n        // by temporarily unobserving the textarea element while manipulating the height\n        // and reobserving one frame later\n        resizeObserver.unobserve(textarea);\n        cancelAnimationFrame(frameRef.current);\n        syncHeight();\n        frameRef.current = requestAnimationFrame(() => {\n          resizeObserver.observe(textarea);\n        });\n      });\n      resizeObserver.observe(textarea);\n    }\n    return () => {\n      debounceHandleResize.clear();\n      cancelAnimationFrame(frameRef.current);\n      containerWindow.removeEventListener('resize', debounceHandleResize);\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, [calculateTextareaStyles, syncHeight]);\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n  const handleChange = event => {\n    if (!isControlled) {\n      syncHeight();\n    }\n    if (onChange) {\n      onChange(event);\n    }\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"textarea\", {\n      value: value,\n      onChange: handleChange,\n      ref: handleRef\n      // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: style,\n      ...other\n    }), /*#__PURE__*/_jsx(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: hiddenTextareaRef,\n      tabIndex: -1,\n      style: {\n        ...styles.shadow,\n        ...style,\n        paddingTop: 0,\n        paddingBottom: 0\n      }\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func, wait = 166) {\n  let timeout;\n  function debounced(...args) {\n    const later = () => {\n      // @ts-ignore\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n  debounced.clear = () => {\n    clearTimeout(timeout);\n  };\n  return debounced;\n}","import ownerDocument from \"../ownerDocument/index.js\";\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}"],"names":["title","setTitle","useState","body","setBody","image","setImage","is_open","setIs_open","res","setRes","preview","setPreview","nav","useNavigate","_jsxs","children","_jsx","AlertPopup","status","className","type","onChange","e","target","files","URL","createObjectURL","onClick","async","formData","FormData","append","response","api","post","error","message","data","TextareaAutosize","value","placeholder","src","alt","_excluded","getStyleValue","parseInt","styles","visibility","position","overflow","height","top","left","transform","React","props","forwardedRef","maxRows","minRows","style","other","_objectWithoutProperties","current","isControlled","textareaRef","handleRef","useForkRef","heightRef","hiddenTextareaRef","calculateTextareaStyles","textarea","hiddenTextarea","computedStyle","ownerWindow","getComputedStyle","width","outerHeightStyle","overflowing","slice","boxSizing","padding","paddingBottom","paddingTop","border","borderBottomWidth","borderTopWidth","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","abs","syncHeight","textareaStyles","object","_","isObjectEmpty","obj","concat","frameRef","useEnhancedEffect","debounceHandleResize","func","timeout","wait","arguments","length","undefined","debounced","_len","args","Array","_key","clearTimeout","setTimeout","later","apply","this","clear","debounce","containerWindow","resizeObserver","addEventListener","ResizeObserver","unobserve","cancelAnimationFrame","requestAnimationFrame","observe","removeEventListener","disconnect","_objectSpread","event","ref","rows","readOnly","tabIndex","node","ownerDocument","defaultView","window"],"sourceRoot":""}