{"version":3,"file":"static/js/812.0a1ba44f.chunk.js","mappings":"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","sources":["components/PostLikeBtn.js","components/comment/CommentIconBtn.js","components/comment/Comment.js","components/comment/CommentsLayout.js","components/comment/WriteComment.js","post/PostView.js"],"sourcesContent":["import React from \"react\";\nimport { FaRegThumbsUp, FaThumbsUp } from \"react-icons/fa\";\nimport { motion } from \"framer-motion\";\n\nfunction PostLikeBtn({ handlePostLike, isLiked, likesCount }) {\n  return (\n    <div className='flex gap-x-1 mt-5 items-center'>\n      <motion.div\n        className='cursor-pointer flex'\n        onClick={handlePostLike}\n        whileTap={{ scale: 1.2 }}\n        animate={{ color: isLiked ? \"white\" : \"#ccc\" }}\n        transition={{ duration: 0.2 }}\n      >\n        {isLiked ? (\n          <FaThumbsUp fontSize={\"25px\"} />\n        ) : (\n          <FaRegThumbsUp fontSize={\"25px\"} />\n        )}\n      </motion.div>\n\n      <div>{likesCount}</div>\n    </div>\n  );\n}\n\nexport default PostLikeBtn;\n","import React from \"react\";\nimport Dropdown from \"@mui/joy/Dropdown\";\nimport IconButton from \"@mui/joy/IconButton\";\nimport Menu from \"@mui/joy/Menu\";\nimport MenuButton from \"@mui/joy/MenuButton\";\nimport MenuItem from \"@mui/joy/MenuItem\";\nimport EmojiEmotionsIcon from \"@mui/icons-material/EmojiEmotions\"; // MUI emoji icon\n\nfunction CommentIconBtn({ handleAction }) {\n  const icons = [\"üëç\", \"üëé\", \"‚ù§Ô∏è\", \"üéâ\"];\n\n  return (\n    <Dropdown>\n      <MenuButton\n        slots={{ root: IconButton }}\n        slotProps={{\n          root: {\n            variant: \"soft\",\n            color: \"primary\",\n            size: \"sm\",\n            sx: {\n              borderRadius: \"50%\",\n              backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n              marginBottom: \"5px\",\n              \"&:hover\": {\n                backgroundColor: \"rgba(25, 118, 210, 0.1)\",\n              },\n            },\n          },\n        }}\n      >\n        <EmojiEmotionsIcon fontSize='small' />\n      </MenuButton>\n\n      <Menu\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          padding: \"5px\",\n          gap: \"4px\",\n        }}\n      >\n        {icons.map((icon, index) => (\n          <MenuItem\n            onClick={() => handleAction(icon)}\n            key={index}\n            sx={{\n              fontSize: \"13px\",\n              borderRadius: \"8px\",\n              padding: \"5px 10px\",\n              \"&:hover\": {\n                backgroundColor: \"rgba(25, 118, 210, 0.1)\",\n              },\n            }}\n          >\n            {icon}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Dropdown>\n  );\n}\n\nexport default CommentIconBtn;\n","import { useEffect, useState } from \"react\";\nimport CommentIconBtn from \"./CommentIconBtn\";\nimport api from \"../../api/axios\";\nimport { useMemo } from \"react\";\nimport useMediaQuery from \"../../hooks/useMediaQuery\";\n\nfunction Comment({\n  avatar,\n  username,\n  date,\n  body,\n  likes = 0,\n  dislikes = 0,\n  loves = 0,\n  celebrates = 0,\n  commentId,\n  postId,\n  auth_reacted,\n}) {\n  // State for current user action\n  const [action, setAction] = useState(null);\n  // State for counts\n  const [counts, setCounts] = useState({\n    like: likes,\n    dislike: dislikes,\n    love: loves,\n    celebrate: celebrates,\n  });\n\n  const isMobile = useMediaQuery(\"(max-width: 768px)\");\n\n  const interactionsMap = {\n    \"üëç\": \"like\",\n    \"üëé\": \"dislike\",\n    \"‚ù§Ô∏è\": \"love\",\n    \"üéâ\": \"celebrate\",\n  };\n\n  const reverseInteractionsMap = useMemo(\n    () => ({\n      like: \"üëç\",\n      dislike: \"üëé\",\n      love: \"‚ù§Ô∏è\",\n      celebrate: \"üéâ\",\n    }),\n    []\n  );\n\n  useEffect(() => {\n    setCounts({\n      like: likes,\n      dislike: dislikes,\n      love: loves,\n      celebrate: celebrates,\n    });\n\n    setAction(auth_reacted ? reverseInteractionsMap[auth_reacted] : null);\n  }, [\n    likes,\n    dislikes,\n    loves,\n    celebrates,\n    auth_reacted,\n    reverseInteractionsMap,\n  ]);\n\n  async function handleAction(newActionType) {\n    const prevAction = action;\n    const reactionType = interactionsMap[newActionType];\n\n    // If clicking the same action again ‚Üí this will delete reaction\n    const nextAction = prevAction === newActionType ? null : newActionType;\n    setAction(nextAction);\n\n    try {\n      await api.patch(`posts/${postId}/comments/${commentId}/reactions`, {\n        type: reactionType,\n      });\n\n      // Update counts optimistically\n      setCounts((prev) => {\n        const updated = { ...prev };\n\n        // Remove previous reaction\n        if (prevAction) {\n          const prevType = interactionsMap[prevAction];\n          updated[prevType] = Math.max(0, updated[prevType] - 1);\n        }\n\n        // Add new reaction (if not removing)\n        if (nextAction) {\n          updated[reactionType] = parseInt(updated[reactionType] || 0) + 1;\n        }\n\n        return updated;\n      });\n    } catch (error) {\n      // Rollback UI on error\n      setAction(prevAction);\n      console.error(\"Error handling reaction:\", error);\n    }\n  }\n\n  return (\n    <div className='flex gap-x-2 mb-4 justify-center'>\n      {isMobile ? null : (\n        <div className='w-10 h-10 rounded-full overflow-hidden flex-shrink-0'>\n          <img\n            src={avatar}\n            alt='avatar'\n            className='w-full h-full object-cover'\n          />\n        </div>\n      )}\n\n      <div className='min-h-[150px] w-[500px] rounded outline outline-1 outline-[#3d424e]'>\n        {/* Header */}\n        <div className='h-10 bg-[#151923] flex gap-x-2 items-center text-[13px] pl-[10px] border-b border-[#3d424e] border-1'>\n          <div>\n            <a href='google.com'>{username}</a>\n          </div>\n          <div className='text-[#9198a1]'> {date}</div>\n        </div>\n\n        <div className='flex flex-col justify-between p-[10px] gap-y-7 flex-1'>\n          {/* Body */}\n          <div className='text-[14px] whitespace-pre-wrap'>{body}</div>\n\n          {/* Interaction */}\n          <div>\n            <CommentIconBtn handleAction={handleAction} />\n            {/* Reactions */}\n            <div className='flex gap-x-2'>\n              {Object.entries(counts).map(([key, value]) => (\n                <div\n                  key={key}\n                  className={`flex items-center justify-evenly text-xs w-[50px] h-[25px] border border-[#3d424e] rounded-full ${\n                    action === reverseInteractionsMap[key]\n                      ? \"bg-[#3d424e] text-white\"\n                      : \"bg-[#151923] text-[#9198a1]\"\n                  }`}\n                >\n                  <div>{reverseInteractionsMap[key]}</div>\n                  <div>{value}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Comment;\n","import Comment from \"./Comment\";\nimport WriteComment from \"./WriteComment\";\n\nfunction CommentsLayout({ comments, addComment }) {\n  if (!comments) {\n    return <div className='text-center text-gray-500'>Loading comments...</div>;\n  }\n\n  if (!comments || comments.length === 0) {\n    return (\n      <div>\n        <h2 className='text-xl font-semibold mb-5 mt-[80px]'>Comments</h2>\n        {/* Write Comment Section */}\n        <WriteComment onAddComment={addComment} />\n        <div className='text-center text-gray-500'>\n          No comments yet. Be the first to comment!\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className='text-2xl font-semibold mb-5 mt-[80px]'>Comments</h2>\n\n      {/* Write Comment Section */}\n      <WriteComment onAddComment={addComment} />\n\n      {comments.map((c) => (\n        <Comment\n          key={`comment-${c.id}`}\n          commentId={c.id}\n          postId={c.post_id}\n          date={c.created_at}\n          body={c.body}\n          likes={c.likes ?? 0}\n          dislikes={c.dislikes ?? 0}\n          celebrates={c.celebrates ?? 0}\n          loves={c.loves ?? 0}\n          avatar={c.user?.avatar || \"/default-avatar.png\"}\n          username={c.user?.username || \"Anonymous\"}\n          auth_reacted={c.auth_reacted}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default CommentsLayout;\n","import React, { useState } from \"react\";\nimport avatar from \"../../images/signin.jpg\";\nimport { Textarea, Button } from \"@mui/joy\";\nimport useMediaQuery from \"../../hooks/useMediaQuery\";\n\nfunction WriteComment({ onAddComment }) {\n  const [text, setText] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const isMobile = useMediaQuery(\"(max-width: 768px)\");\n  async function handleSubmit() {\n    setIsSubmitting(true);\n    await onAddComment(text);\n    setText(\"\"); // Clear the textarea after submitting\n    setIsSubmitting(false);\n  }\n\n  return (\n    <div className='flex gap-x-2 mb-11'>\n      {isMobile ? null : (\n        <>\n          {/* Avatar */}\n          <div className='w-10 h-10 rounded-full overflow-hidden flex-shrink-0'>\n            <img\n              src={user?.avatar}\n              alt=''\n              className='w-full h-full object-cover'\n            />\n          </div>\n        </>\n      )}\n\n      {/* Textarea and Button */}\n      <div className='flex-1'>\n        <Textarea\n          sx={{\n            minHeight: \"200px\",\n            backgroundColor: \"unset\",\n            padding: \"15px\",\n          }}\n          placeholder='Write a Comment...'\n          variant='outlined'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n        <div className='flex justify-end mt-2'>\n          <Button\n            variant='solid'\n            color='success'\n            sx={{\n              px: 2,\n              fontWeight: 400,\n              textTransform: \"none\",\n              borderRadius: \"6px\",\n            }}\n            onClick={handleSubmit}\n          >\n            {isSubmitting ? \"Submitting...\" : \"Comment\"}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WriteComment;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { TextareaAutosize } from \"@mui/material\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport api from \"../api/axios\";\nimport CommentsLayout from \"../components/comment/CommentsLayout\";\nimport PostLikeBtn from \"../components/PostLikeBtn\";\n\nfunction PostView() {\n  const { id: postId } = useParams();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [isLiked, setIsLiked] = useState(false);\n  const [likesCount, setLikesCount] = useState(0);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  useEffect(() => {\n    async function getPost() {\n      try {\n        const res = await api.get(`posts/${postId}`);\n        setPost(res.data.post);\n        setComments(res.data.comments);\n        setIsLiked(res.data.post.liked);\n        setLikesCount(res.data.post.likes_count);\n      } catch (error) {\n        console.error(\"Error fetching post:\", error);\n      }\n    }\n    getPost();\n  }, [postId]);\n\n  async function addComment(text) {\n    if (!text.trim()) return;\n\n    try {\n      const res = await api.post(`posts/${postId}/comments`, { body: text });\n      const newComment = {\n        ...res.data.comment,\n        user: {\n          id: user.id,\n          username: user.username,\n          avatar: user.avatar,\n        },\n      };\n      console.log(\"New comment added:\", newComment);\n\n      setComments((prev) => [...prev, newComment]);\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  }\n\n  async function handlePostLike() {\n    const postId = post.id;\n    setIsLiked((prev) => !prev);\n\n    try {\n      let res = await api.post(`posts/${postId}/like`);\n      if (!res.data.liked) {\n        setIsLiked(false);\n        setLikesCount((prev) => Math.max(prev - 1, 0));\n      } else {\n        setIsLiked(true);\n        setLikesCount((prev) => prev + 1);\n      }\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  }\n\n  if (!post) {\n    return (\n      <div className='container-c'>\n        <Skeleton\n          variant='rectangular'\n          style={{ height: \"50px\", marginBottom: \"50px\" }}\n        />\n        <Skeleton variant='rectangular' style={{ height: \"300px\" }} />\n      </div>\n    );\n  }\n\n  return (\n    <div className='container-c'>\n      <div>\n        <TextareaAutosize\n          value={post?.title}\n          disabled\n          placeholder='Title'\n          className='h-[100px] text-4xl mt-7 mb-[30px] pb-[20px]'\n        />\n      </div>\n      {post.image_url && (\n        <div className='flex justify-center mb-8'>\n          <img\n            className='h-[500px] w-[100%] rounded object-cover'\n            src={post?.image_url}\n            alt='img'\n          />\n        </div>\n      )}\n      <div>\n        <TextareaAutosize\n          disabled\n          value={post?.body}\n          placeholder='Tell Your Story'\n          className='text-2xl'\n        />\n      </div>\n      <div>\n        <TextareaAutosize\n          disabled\n          value={post?.body}\n          placeholder='Tell Your Story'\n          className='text-2xl'\n        />\n      </div>\n      <PostLikeBtn\n        handlePostLike={handlePostLike}\n        isLiked={isLiked}\n        likesCount={likesCount}\n      />\n\n      <CommentsLayout comments={comments} addComment={addComment} />\n    </div>\n  );\n}\n\nexport default PostView;\n"],"names":["_ref","handlePostLike","isLiked","likesCount","_jsxs","className","children","_jsx","motion","div","onClick","whileTap","scale","animate","color","transition","duration","FaThumbsUp","fontSize","FaRegThumbsUp","handleAction","Dropdown","MenuButton","slots","root","IconButton","slotProps","variant","size","sx","borderRadius","backgroundColor","marginBottom","EmojiEmotionsIcon","Menu","display","flexDirection","padding","gap","map","icon","index","MenuItem","avatar","username","date","body","likes","dislikes","loves","celebrates","commentId","postId","auth_reacted","action","setAction","useState","counts","setCounts","like","dislike","love","celebrate","isMobile","useMediaQuery","interactionsMap","reverseInteractionsMap","useMemo","useEffect","src","alt","href","CommentIconBtn","async","newActionType","prevAction","reactionType","nextAction","api","patch","concat","type","prev","updated","_objectSpread","prevType","Math","max","parseInt","error","console","Object","entries","_ref2","key","value","comments","addComment","length","WriteComment","onAddComment","c","_c$likes","_c$dislikes","_c$celebrates","_c$loves","_c$user","_c$user2","Comment","id","post_id","created_at","user","text","setText","isSubmitting","setIsSubmitting","JSON","parse","localStorage","getItem","_Fragment","Textarea","minHeight","placeholder","onChange","e","target","Button","px","fontWeight","textTransform","useParams","post","setPost","setComments","setIsLiked","setLikesCount","res","get","data","liked","likes_count","getPost","TextareaAutosize","title","disabled","image_url","PostLikeBtn","log","CommentsLayout","trim","newComment","comment","Skeleton","style","height"],"sourceRoot":""}