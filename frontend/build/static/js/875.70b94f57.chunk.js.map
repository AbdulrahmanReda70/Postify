{"version":3,"file":"static/js/875.70b94f57.chunk.js","mappings":"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","sources":["components/InputModal.js","user/UserProfile.js"],"sourcesContent":["import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Input from \"@mui/material/Input\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Stack from \"@mui/material/Stack\";\nimport api from \"../api/axios\";\nimport { saveUserInfo } from \"../api/authService\";\nimport AlertPopup from \"./popup/AlertPopup\";\n\nexport default function InputModal({ modalOpen, setModalOpen, from, setUser }) {\n  function renderModalContent() {\n    switch (from) {\n      case \"username\":\n        return ModalF(modalOpen, setModalOpen, \"username\", setUser);\n      case \"email\":\n        return ModalF(modalOpen, setModalOpen, \"email\", setUser);\n      case \"password\":\n        return ModalF(modalOpen, setModalOpen, \"password\", setUser);\n      default:\n        return null;\n    }\n  }\n\n  return <>{renderModalContent()}</>;\n}\n\nfunction ModalF(modalOpen, setModalOpen, title, setUser) {\n  const [openPop, setOpenPop] = React.useState(false);\n  const [res, setRes] = React.useState(false);\n\n  async function handleUpdate(field, value, confirmPass) {\n    if (field === \"password\" && value !== confirmPass) {\n      setRes({ error: true, message: \"Passwords should match\" });\n      setOpenPop(true);\n      return null;\n    }\n\n    const res = await api.patch(\"user\", {\n      [field]: value,\n    });\n\n    if (res.error) {\n      setRes({ error: true, message: res.message });\n    } else {\n      setRes({ error: false, message: res.data.message });\n      console.log(res);\n      saveUserInfo(res.data.user);\n      setUser(res.data.user);\n    }\n    setOpenPop(true);\n  }\n\n  return (\n    <>\n      <AlertPopup is_open={openPop} setIs_open={setOpenPop} status={res} />\n      <React.Fragment>\n        <Dialog open={modalOpen} onClose={() => setModalOpen(false)}>\n          <DialogActions>\n            <form\n              onSubmit={(event) => {\n                event.preventDefault();\n                const inputValue = event.target[0].value;\n                const confirmPass = event.target[1].value;\n                handleUpdate(title, inputValue, confirmPass);\n                setModalOpen(false);\n              }}\n            >\n              <Stack spacing={2}>\n                <FormControl>\n                  <Input\n                    className='h-[40px] p-5 pl-1'\n                    autoFocus\n                    required\n                    placeholder={`Enter ${title.toLowerCase()}`}\n                  />\n                  {title === \"password\" && (\n                    <Input\n                      className='h-[40px] p-3 mt-5 pl-1'\n                      autoFocus\n                      required\n                      placeholder={`Confirm Password`}\n                    />\n                  )}\n                </FormControl>\n                <Button type='submit'>Update</Button>\n              </Stack>\n            </form>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    </>\n  );\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport api from \"../api/axios\";\nimport InputModal from \"../components/InputModal\";\nimport { getUserInfo } from \"../api/authService\";\nimport { TextareaAutosize } from \"@mui/material\";\nimport { useNavigate } from \"react-router\";\n\nfunction UserProfile() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [from, setFrom] = useState(false);\n  const [user, setUser] = useState({});\n  const [description, setDescription] = useState(\"\");\n  const nav = useNavigate();\n  const userL = getUserInfo();\n\n  if (!userL) {\n    window.location.href = \"/signin\";\n  }\n  console.log(user, \"user\");\n\n  async function handleUpdate(e) {\n    setFrom(e);\n    setModalOpen(true);\n  }\n\n  async function handleDeleteAccount() {\n    let conf = window.confirm(\n      \"Are you sure you want to delete your account?⚠️\"\n    );\n    if (conf) {\n      try {\n        const res = await api.delete(\"user\");\n\n        if (!res.error) {\n          console.log(\"Account deleted successfully:\", res.message);\n          localStorage.clear();\n          nav(\"/signin\", { replace: true });\n        } else {\n          console.error(\"Failed to delete account:\", res.message);\n          alert(\"Failed to delete account. Please try again.\");\n        }\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n        alert(\n          \"An error occurred while deleting your account. Please try again.\"\n        );\n      }\n    }\n  }\n\n  // Debounce function to limit API calls\n  const debounce = (func, delay) => {\n    let timer;\n    return (...args) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        func(...args);\n      }, delay);\n    };\n  };\n\n  // Function to update the description on the server\n  const updateDescription = async (newDescription) => {\n    const res = await api.patch(\"user\", {\n      description: newDescription,\n    });\n\n    if (!res.error) {\n      console.log(\"Description updated successfully:\", res.data);\n    } else {\n      console.error(\"Failed to update description:\", res.message);\n    }\n  };\n\n  // Debounced version of the updateDescription function\n  const debouncedUpdateDescription = useCallback(\n    debounce(updateDescription, 1000),\n    []\n  );\n\n  // Handle description change\n  const handleDescription = (e) => {\n    const newDescription = e.target.value;\n    setDescription(newDescription);\n    debouncedUpdateDescription(newDescription); // Call the debounced function\n  };\n\n  useEffect(() => {\n    console.log(userL, \"user\");\n\n    setUser(userL);\n    if (userL?.description) {\n      setDescription(userL?.description);\n    }\n  }, []);\n\n  if (!userL) {\n    nav(\"/signin\", { replace: true });\n  }\n\n  return (\n    <div className='container-c'>\n      <InputModal\n        setUser={setUser}\n        modalOpen={modalOpen}\n        setModalOpen={setModalOpen}\n        from={from}\n      />\n      <div className='flex items-center gap-2 mt-10 mb-4'>\n        <img src={user.avatar} alt='' className='w-12' />\n        <h2 className='text-4xl'>{user.username}</h2>\n      </div>\n      <div>\n        <TextareaAutosize\n          value={description}\n          maxLength={200}\n          onChange={handleDescription} // Use the debounced handler\n          placeholder='Tell the world about yourself'\n          className={`max-w-[600px] h-[100px] max-h-[300px] text-xl mt-5 mb-[80px] pb-[20px] `}\n        />\n      </div>\n      <div className='flex flex-col gap-5 '>\n        <div\n          onClick={() => handleUpdate(\"username\")}\n          className='flex justify-between items-center cursor-pointer'\n        >\n          <div className='text-xl'>Username</div>\n          <div className='text-[#8f8e8e]'> {user.username}</div>\n        </div>\n        <div\n          onClick={() => handleUpdate(\"email\")}\n          className='flex justify-between items-center cursor-pointer'\n        >\n          <div className='text-xl'>Email</div>\n          <div className='text-[#8f8e8e]'>{user.email}</div>\n        </div>\n        <div\n          onClick={() => handleUpdate(\"password\")}\n          className='flex justify-between items-center cursor-pointer'\n        >\n          <div className='text-xl'>Password</div>\n          <div className='text-[#8f8e8e]'>*****</div>\n        </div>\n        <div\n          onClick={handleDeleteAccount}\n          className='text-red-700 mt-5 cursor-pointer w-fit'\n        >\n          Delete Account\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserProfile;\n"],"names":["InputModal","_ref","modalOpen","setModalOpen","from","setUser","_jsx","_Fragment","children","ModalF","renderModalContent","title","openPop","setOpenPop","React","res","setRes","_jsxs","AlertPopup","is_open","setIs_open","status","Dialog","open","onClose","DialogActions","onSubmit","event","preventDefault","inputValue","target","value","confirmPass","async","field","error","message","api","patch","data","console","log","saveUserInfo","user","handleUpdate","Stack","spacing","FormControl","Input","className","autoFocus","required","placeholder","concat","toLowerCase","Button","type","useState","setFrom","description","setDescription","nav","useNavigate","userL","getUserInfo","e","window","location","href","debouncedUpdateDescription","useCallback","debounce","func","delay","timer","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","newDescription","useEffect","replace","src","avatar","alt","username","TextareaAutosize","maxLength","onChange","onClick","email","confirm","delete","alert","localStorage","clear"],"sourceRoot":""}